<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.datamodel">Data model</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.datamodel.simple">Basic types</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
    <h2>Basic types</h2>
	<p>SurrealDB has a large number of simple built-in types. With an advanced type system, SurrealDB enables advanced storage, simplified comparison, complex data structures, and mathematical operations directly within the database.</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>None values</h3>
	<p>Values can be specifically set to <code>NONE</code> in SurrealDB to remove a field from a record.</p>
	<Code @name="docs-datamodel-simple-none.sql">
		CREATE person SET children = NONE;
	</Code>
	<p>The <code>NONE</code> keyword can be written in anycase.</p>
	<Code @name="docs-datamodel-simple-none-anycase.sql">
		CREATE person SET children = NONE, siblings = none;
	</Code>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Null values</h3>
	<p>Values can be specifically set to <code>NULL</code> in SurrealDB to denote a field which is set, but which does not have a value.</p>
	<Code @name="docs-datamodel-simple-null.sql">
		CREATE person SET children = NULL;
	</Code>
	<p>The <code>NULL</code> keyword can be written in anycase.</p>
	<Code @name="docs-datamodel-simple-null-anycase.sql">
		CREATE person SET children = NULL, siblings = null;
	</Code>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Booleans</h3>
	<p>Boolean values can be used to mark whether a field is <code>true</code> or <code>false</code>.</p>
	<Code @name="docs-datamodel-simple-booleans.sql">
		CREATE person SET newsletter = false, interested = true;
	</Code>
	<p>Boolean values can be written in anycase.</p>
	<Code @name="docs-datamodel-simple-booleans-anycase.sql">
		CREATE person SET newsletter = FALSE, interested = True;
	</Code>
</Layout::Text>

<Layout::Gap large />