<Layout::Text text-l text-f>

	<h2>Starting <img inline src="/static/img/text.svg" alt="SurrealDB" /></h2>

	<p>Once you have installed SurrealDB, the <Ascua::Prism::Inline @language="bash" @code="surreal" /> command-line tool is a single executable which can be used to backup, interact with, and run SurrealDB server instances. In this article we will start a SurrealDB server so that we can store and query data.</p>

	<p>Run the following command in your terminal. It will display the options for starting a SurrealDB server instance.</p>

	<codes vertical>
		<Code @name="docs-start-starting-step1.shell">
			user@localhost % surreal start -h
		</Code>
		<Code @name="docs/cli/help/start.txt" />
	</codes>

</Layout::Text>

<Layout::Gap small />

<Layout::Text text-l text-f>

	<h3>Starting a single-node in-memory database</h3>

	<p>For the purposes of getting started with SurrealDB quickly, we will start an in-memory database which does not persist data on shutdown. This database is great for development and testing.</p>

	<Code @name="docs-start-starting-step2.shell">
		user@localhost % surreal start memory
	</Code>

	<p>The default logging level for the database server is <code>info</code>, resulting in any informational logs to be output to the standard output. To control the logging verbosity, specify the <Ascua::Prism::Inline @language="bash" @code="--log" /> argument. The following command starts the database with <code>trace</code> level logging, resulting in most logs being output to the standard output.</p>

	<Code @name="docs-start-starting-step3.shell">
		user@localhost % surreal start --log trace memory
	</Code>

	<p>In order to keep SurrealDB secure, the database disables root-level authentication if a password is not set. To set a root-level authentication login, use the <Ascua::Prism::Inline @language="bash" @code="--user" /> and <Ascua::Prism::Inline @language="bash" @code="--pass" /> command-line arguments. The following command starts the database with a top-level user named <code>root</code> with a password also set to <code>root</code>.</p>

	<Code @name="docs-start-starting-step4.shell">
		user@localhost % surreal start --log trace --user root --pass root memory
	</Code>

	<p>After running the above command, you should see the SurrealDB server startup successfully.</p>

	<Code @name="docs-start-starting-step5.shell">
		user@localhost % surreal start --log trace --user root --pass root memory
		[2022-07-28 15:50:34] INFO  surrealdb::iam Root authentication is enabled
		[2022-07-28 15:50:34] INFO  surrealdb::dbs Database strict mode is disabled
		[2022-07-28 15:50:34] INFO  surrealdb::kvs Starting kvs store in memory
		[2022-07-28 15:50:34] INFO  surrealdb::kvs Started kvs store in memory
		[2022-07-28 15:50:34] INFO  surrealdb::net Starting web server on 0.0.0.0:8000
		[2022-07-28 15:50:34] INFO  surrealdb::net Started web server on 0.0.0.0:8000
	</Code>

</Layout::Text>

<Layout::Gap small />

<Layout::Text text-l text-f>

	<h3>Starting a multi-node distributed database</h3>

	<p>For highly-available and highly-scalable setups, SurrealDB can be run on top of a <a href="https://tikv.org" rel="noopener noreferrer" target="_blank">TiKV</a> cluster, with the ability to horizontally scale to <code>100+</code> terabytes of data. In this example, we will start a local TiKV cluster with a single node, for development and testing purposes only.</p>

	<p>To install TiKV on your development machine, run the following command. This will install the <Ascua::Prism::Inline @language="bash" @code="tiup" /> command-line tool, which enables deploying and managing TiKV clusters of any size.</p>

	<Code @name="docs-start-starting-step6.shell">
		user@localhost % curl -sSf https://tiup-mirrors.pingcap.com/install.sh | sh
	</Code>

	<p>Once installed we shall start up a simple single-node development cluster.</p>

	<Code @name="docs-start-starting-step7.shell">
		user@localhost % tiup playground --mode tikv-slim
		tiup is checking updates for component playground ...
		Starting component `playground`: /Users/tobie/.tiup/components/playground/v1.10.2/tiup-playground --mode tikv-slim
		Using the version v6.1.0 for version constraint "".

		If you'd like to use a TiDB version other than v6.1.0, cancel and retry with the following arguments:
			Specify version manually:   tiup playground version
			Specify version range:      tiup playground ^5
			The nightly version:        tiup playground nightly

		Playground Bootstrapping...
		Start pd instance:v6.1.0
		Start tikv instance:v6.1.0
		PD client endpoints: [127.0.0.1:2379]
		To view the Prometheus: http://127.0.0.1:9090
		To view the Grafana: http://127.0.0.1:3000
	</Code>

	<p>Once TiKV is up and running, we can start a SurrealDB server instance, specifying the TiKV cluster endpoint as the backing data store.</p>

	<Code @name="docs-start-starting-step8.shell">
		user@localhost % surreal start --log trace --user root --pass root tikv://127.0.0.1:2379
		[2022-07-28 15:50:34] INFO  surrealdb::iam Root authentication is enabled
		[2022-07-28 15:50:34] INFO  surrealdb::dbs Database strict mode is disabled
		[2022-07-28 15:50:34] INFO  surrealdb::kvs Connecting to kvs store at tikv://127.0.0.1:2379
		[2022-07-28 15:50:34] INFO  surrealdb::kvs Connected to kvs store at tikv://127.0.0.1:2379
		[2022-07-28 15:50:34] INFO  surrealdb::net Starting web server on 0.0.0.0:8000
		[2022-07-28 15:50:34] INFO  surrealdb::net Started web server on 0.0.0.0:8000
	</Code>

</Layout::Text>

<Layout::Gap small />

<Layout::Text text-l text-f>

	<h3>Starting a multi-node distributed database with persistence storage</h3>

	<p>same steps as above, but to run it with persistence you can give it a persistent cluster tag name <Ascua::Prism::Inline @language="bash" @code="--tag surrealdb-kv" /> on run TiKV command</p>

	<Code @name="docs-start-starting-step10.shell">
		user@localhost % tiup playground --tag surrealdb-kv --mode tikv-slim --pd 3 --kv 3
		Using the version v6.1.0 for version constraint "".

		If you'd like to use a TiDB version other than v6.1.0, cancel and retry with the following arguments:
			Specify version manually:   tiup playground version
			Specify version range:      tiup playground ^5
			The nightly version:        tiup playground nightly

		Playground Bootstrapping...
		Start pd instance:v6.1.0
		Start pd instance:v6.1.0
		Start pd instance:v6.1.0
		Start tikv instance:v6.1.0
		Start tikv instance:v6.1.0
		Start tikv instance:v6.1.0
		PD client endpoints: [127.0.0.1:2379 127.0.0.1:2382 127.0.0.1:2384]
		To view the Prometheus: http://127.0.0.1:9090
		To view the Grafana: http://127.0.0.1:3000
	</Code>

	<p>Once TiKV is up and running, we can start a SurrealDB server instance, specifying the TiKV cluster endpoint as the backing data store.</p>

	<Code @name="docs-start-starting-step11.shell">
		user@localhost % surreal start --log trace --user root --pass root tikv://127.0.0.1:2379
		[2022-08-03 14:55:54] INFO  surrealdb::iam Root authentication is enabled
		[2022-08-03 14:55:54] INFO  surrealdb::dbs Database strict mode is disabled
		[2022-08-03 14:55:54] INFO  surrealdb::kvs Connecting to kvs store at tikv://127.0.0.1:2379
		[2022-08-03 14:55:54] INFO  surrealdb::kvs Connected to kvs store at tikv://127.0.0.1:2379
		[2022-08-03 14:55:54] INFO  surrealdb::net Starting web server on 0.0.0.0:8000
		[2022-08-03 14:55:54] INFO  surrealdb::net Started web server on 0.0.0.0:8000
	</Code>

	<p>TiKV data will be stored in <Ascua::Prism::Inline @language="bash" @code="/home/tobie/.tiup/data/surrealdb-kv" />, macos in <Ascua::Prism::Inline @language="bash" @code="/Users/tobie/.tiup/data/surrealdb-kv" /></p>

</Layout::Text>

<Layout::Gap small />

<Layout::Text text-l text-f>
	<h3>Next steps</h3>
	<p>Congratulations, youâ€™ve now successfully started SurrealDB! You are now ready to start inserting data and performing queries against SurrealDB. Take a look at the next chapter to get started with querying SurrealDB.</p>
</Layout::Text>

<Layout::Gap large />